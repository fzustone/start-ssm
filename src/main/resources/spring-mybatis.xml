<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="org.ssm"/>

	<!-- 第一种方式：加载一个properties文件 -->
	<bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"/>
	</bean>


	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		  destroy-method="close">
		<property name="driverClassName" value="${jdbc.Driver}"/>
		<property name="url" value="${jdbc.Url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"/>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"/>

		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"/>
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="20" />

		<property name="asyncInit" value="true" />
	</bean>


	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapping/*.xml"/>
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="org.ssm.model"/>
		<!-- 全局配置注入 -->
		<!--<property name="globalConfig" ref="globalConfig"/>-->
	</bean>


	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.ssm.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>


	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven/>
</beans>